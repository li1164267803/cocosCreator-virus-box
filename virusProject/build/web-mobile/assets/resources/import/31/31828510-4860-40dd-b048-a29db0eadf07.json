{"__type__":"cc.EffectAsset","_name":"CirclePortrait_Base","techniques":[{"passes":[{"blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"u_edge":{"value":[0.5],"type":13},"edge_blur":{"value":[0.01],"type":13},"color0":{"value":[1,1,1,1],"type":16},"edge_color0":{"value":[1,1,1,0],"type":16}},"program":"CirclePortrait_Base|vs|fs"}]}],"shaders":[{"hash":1862044061,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nuniform sampler2D texture;\nvarying vec2 v_uv0;\nuniform ARGS{\n    vec4 color0;\n    vec4 edge_color0;\n    float u_edge;\n    float edge_blur;\n};\nvec4 drawCircle() {\n    float edge = u_edge;\n    float dis = 0.0;\n    vec2 uv = v_uv0;\n        if ( uv.x < edge )\n        {\n            if ( uv.y < edge )\n            {\n                dis = distance( uv, vec2(edge, edge) );\n            }\n            if ( uv.y > (1.0 - edge) )\n            {\n                dis = distance( uv, vec2(edge, (1.0 - edge)) );\n            }\n        }\n        else if ( uv.x > (1.0 - edge) )\n        {\n            if ( uv.y < edge )\n            {\n                dis = distance( uv, vec2((1.0 - edge), edge ) );\n            }\n            if ( uv.y > (1.0 - edge) )\n            {\n                dis = distance( uv, vec2((1.0 - edge), (1.0 - edge) ) );\n            }\n        }\n        vec4 color = color0 * texture2D(texture,uv);\n        vec4 edge_color = color;\n        float blur = edge_blur;\n          edge_color = edge_color0  * texture2D(texture,uv);\n        if(dis > 0.001)\n        {\n            float gap = edge * blur;\n            if(dis <= edge - gap)\n            {\n                color = color;\n            }\n            else if(dis <= edge)\n            {\n                float t = smoothstep(0.,gap,edge-dis);\n                color = vec4(edge_color.rgb,t * edge_color.a);\n            }else{\n                color = vec4(edge_color.rgb,0.);\n            }\n        }\n        else\n        {\n          color =  color;\n        }\n    return  color;\n}\n    void main()\n    {\n      vec4 color = drawCircle();\n      gl_FragColor = color;\n    }"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nuniform sampler2D texture;\nvarying vec2 v_uv0;\nuniform vec4 color0;\nuniform vec4 edge_color0;\nuniform float u_edge;\nuniform float edge_blur;\nvec4 drawCircle() {\n    float edge = u_edge;\n    float dis = 0.0;\n    vec2 uv = v_uv0;\n        if ( uv.x < edge )\n        {\n            if ( uv.y < edge )\n            {\n                dis = distance( uv, vec2(edge, edge) );\n            }\n            if ( uv.y > (1.0 - edge) )\n            {\n                dis = distance( uv, vec2(edge, (1.0 - edge)) );\n            }\n        }\n        else if ( uv.x > (1.0 - edge) )\n        {\n            if ( uv.y < edge )\n            {\n                dis = distance( uv, vec2((1.0 - edge), edge ) );\n            }\n            if ( uv.y > (1.0 - edge) )\n            {\n                dis = distance( uv, vec2((1.0 - edge), (1.0 - edge) ) );\n            }\n        }\n        vec4 color = color0 * texture2D(texture,uv);\n        vec4 edge_color = color;\n        float blur = edge_blur;\n          edge_color = edge_color0  * texture2D(texture,uv);\n        if(dis > 0.001)\n        {\n            float gap = edge * blur;\n            if(dis <= edge - gap)\n            {\n                color = color;\n            }\n            else if(dis <= edge)\n            {\n                float t = smoothstep(0.,gap,edge-dis);\n                color = vec4(edge_color.rgb,t * edge_color.a);\n            }else{\n                color = vec4(edge_color.rgb,0.);\n            }\n        }\n        else\n        {\n          color =  color;\n        }\n    return  color;\n}\n    void main()\n    {\n      vec4 color = drawCircle();\n      gl_FragColor = color;\n    }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]}],"blocks":[{"name":"ARGS","members":[{"name":"color0","type":16,"count":1},{"name":"edge_color0","type":16,"count":1},{"name":"u_edge","type":13,"count":1},{"name":"edge_blur","type":13,"count":1}],"defines":[],"binding":0}],"samplers":[{"name":"texture","type":29,"count":1,"defines":[],"binding":30}],"record":null,"name":"CirclePortrait_Base|vs|fs"}]}